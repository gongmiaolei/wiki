{"remainingRequest":"/Users/gongmiaolei/Downloads/jiawawiki/web/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/gongmiaolei/Downloads/jiawawiki/web/src/views/admin/admin-category.vue?vue&type=style&index=0&id=7f69505a&scoped=true&lang=css","dependencies":[{"path":"/Users/gongmiaolei/Downloads/jiawawiki/web/src/views/admin/admin-category.vue","mtime":1614134929000},{"path":"/Users/gongmiaolei/Downloads/jiawawiki/web/node_modules/css-loader/dist/cjs.js","mtime":1678346314778},{"path":"/Users/gongmiaolei/Downloads/jiawawiki/web/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1678346315341},{"path":"/Users/gongmiaolei/Downloads/jiawawiki/web/node_modules/postcss-loader/src/index.js","mtime":1678346315020},{"path":"/Users/gongmiaolei/Downloads/jiawawiki/web/node_modules/cache-loader/dist/cjs.js","mtime":1678346314360},{"path":"/Users/gongmiaolei/Downloads/jiawawiki/web/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":1678346314907}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgaW1nIHsKICAgIHdpZHRoOiA1MHB4OwogICAgaGVpZ2h0OiA1MHB4OwogIH0K"},{"version":3,"sources":["/Users/gongmiaolei/Downloads/jiawawiki/web/src/views/admin/admin-category.vue"],"names":[],"mappings":";EA6OE,CAAC,CAAC,EAAE;IACF,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACd","file":"/Users/gongmiaolei/Downloads/jiawawiki/web/src/views/admin/admin-category.vue","sourceRoot":"","sourcesContent":["<template>\n  <a-layout>\n    <a-layout-content\n      :style=\"{ background: '#fff', padding: '24px', margin: 0, minHeight: '280px' }\"\n    >\n      <p>\n        <a-form layout=\"inline\" :model=\"param\">\n          <a-form-item>\n            <a-button type=\"primary\" @click=\"handleQuery()\">\n              查询\n            </a-button>\n          </a-form-item>\n          <a-form-item>\n            <a-button type=\"primary\" @click=\"add()\">\n              新增\n            </a-button>\n          </a-form-item>\n        </a-form>\n      </p>\n      <p>\n        <a-alert\n                class=\"tip\"\n                message=\"小提示：这里的分类会显示到首页的侧边菜单\"\n                type=\"info\"\n                closable\n        />\n      </p>\n      <a-table\n        v-if=\"level1.length > 0\"\n        :columns=\"columns\"\n        :row-key=\"record => record.id\"\n        :data-source=\"level1\"\n        :loading=\"loading\"\n        :pagination=\"false\"\n        :defaultExpandAllRows=\"true\"\n      >\n        <template #cover=\"{ text: cover }\">\n          <img v-if=\"cover\" :src=\"cover\" alt=\"avatar\" />\n        </template>\n        <template v-slot:action=\"{ text, record }\">\n          <a-space size=\"small\">\n            <a-button type=\"primary\" @click=\"edit(record)\">\n              编辑\n            </a-button>\n            <a-popconfirm\n              title=\"删除后不可恢复，确认删除?\"\n              ok-text=\"是\"\n              cancel-text=\"否\"\n              @confirm=\"handleDelete(record.id)\"\n            >\n              <a-button type=\"danger\">\n                删除\n              </a-button>\n            </a-popconfirm>\n          </a-space>\n        </template>\n      </a-table>\n    </a-layout-content>\n  </a-layout>\n\n  <a-modal\n    title=\"分类表单\"\n    v-model:visible=\"modalVisible\"\n    :confirm-loading=\"modalLoading\"\n    @ok=\"handleModalOk\"\n  >\n    <a-form :model=\"category\" :label-col=\"{ span: 6 }\" :wrapper-col=\"{ span: 18 }\">\n      <a-form-item label=\"名称\">\n        <a-input v-model:value=\"category.name\" />\n      </a-form-item>\n      <a-form-item label=\"父分类\">\n        <a-select\n          v-model:value=\"category.parent\"\n          ref=\"select\"\n        >\n          <a-select-option :value=\"0\">\n            无\n          </a-select-option>\n          <a-select-option v-for=\"c in level1\" :key=\"c.id\" :value=\"c.id\" :disabled=\"category.id === c.id\">\n            {{c.name}}\n          </a-select-option>\n        </a-select>\n      </a-form-item>\n      <a-form-item label=\"顺序\">\n        <a-input v-model:value=\"category.sort\" />\n      </a-form-item>\n    </a-form>\n  </a-modal>\n</template>\n\n<script lang=\"ts\">\n  import { defineComponent, onMounted, ref } from 'vue';\n  import axios from 'axios';\n  import { message } from 'ant-design-vue';\n  import {Tool} from \"@/util/tool\";\n\n  export default defineComponent({\n    name: 'AdminCategory',\n    setup() {\n      const param = ref();\n      param.value = {};\n      const categorys = ref();\n      const loading = ref(false);\n\n      const columns = [\n        {\n          title: '名称',\n          dataIndex: 'name'\n        },\n        // {\n        //   title: '父分类',\n        //   key: 'parent',\n        //   dataIndex: 'parent'\n        // },\n        {\n          title: '顺序',\n          dataIndex: 'sort'\n        },\n        {\n          title: 'Action',\n          key: 'action',\n          slots: { customRender: 'action' }\n        }\n      ];\n\n      /**\n       * 一级分类树，children属性就是二级分类\n       * [{\n       *   id: \"\",\n       *   name: \"\",\n       *   children: [{\n       *     id: \"\",\n       *     name: \"\",\n       *   }]\n       * }]\n       */\n      const level1 = ref(); // 一级分类树，children属性就是二级分类\n      level1.value = [];\n\n      /**\n       * 数据查询\n       **/\n      const handleQuery = () => {\n        loading.value = true;\n        // 如果不清空现有数据，则编辑保存重新加载数据后，再点编辑，则列表显示的还是编辑前的数据\n        level1.value = [];\n        axios.get(\"/category/all\").then((response) => {\n          loading.value = false;\n          const data = response.data;\n          if (data.success) {\n            categorys.value = data.content;\n            console.log(\"原始数组：\", categorys.value);\n\n            level1.value = [];\n            level1.value = Tool.array2Tree(categorys.value, 0);\n            console.log(\"树形结构：\", level1);\n          } else {\n            message.error(data.message);\n          }\n        });\n      };\n\n      // -------- 表单 ---------\n      const category = ref({});\n      const modalVisible = ref(false);\n      const modalLoading = ref(false);\n      const handleModalOk = () => {\n        modalLoading.value = true;\n        axios.post(\"/category/save\", category.value).then((response) => {\n          modalLoading.value = false;\n          const data = response.data; // data = commonResp\n          if (data.success) {\n            modalVisible.value = false;\n\n            // 重新加载列表\n            handleQuery();\n          } else {\n            message.error(data.message);\n          }\n        });\n      };\n\n      /**\n       * 编辑\n       */\n      const edit = (record: any) => {\n        modalVisible.value = true;\n        category.value = Tool.copy(record);\n      };\n\n      /**\n       * 新增\n       */\n      const add = () => {\n        modalVisible.value = true;\n        category.value = {};\n      };\n\n      const handleDelete = (id: number) => {\n        axios.delete(\"/category/delete/\" + id).then((response) => {\n          const data = response.data; // data = commonResp\n          if (data.success) {\n            // 重新加载列表\n            handleQuery();\n          } else {\n            message.error(data.message);\n          }\n        });\n      };\n\n      onMounted(() => {\n        handleQuery();\n      });\n\n      return {\n        param,\n        // categorys,\n        level1,\n        columns,\n        loading,\n        handleQuery,\n\n        edit,\n        add,\n\n        category,\n        modalVisible,\n        modalLoading,\n        handleModalOk,\n\n        handleDelete\n      }\n    }\n  });\n</script>\n\n<style scoped>\n  img {\n    width: 50px;\n    height: 50px;\n  }\n</style>\n"]}]}