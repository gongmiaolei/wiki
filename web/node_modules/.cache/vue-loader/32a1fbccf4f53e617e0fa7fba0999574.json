{"remainingRequest":"/Users/gongmiaolei/Downloads/jiawawiki/web/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/gongmiaolei/Downloads/jiawawiki/web/src/views/admin/admin-user.vue?vue&type=style&index=0&id=2948926c&scoped=true&lang=css","dependencies":[{"path":"/Users/gongmiaolei/Downloads/jiawawiki/web/src/views/admin/admin-user.vue","mtime":1614134929000},{"path":"/Users/gongmiaolei/Downloads/jiawawiki/web/node_modules/css-loader/dist/cjs.js","mtime":1678346314778},{"path":"/Users/gongmiaolei/Downloads/jiawawiki/web/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1678346315341},{"path":"/Users/gongmiaolei/Downloads/jiawawiki/web/node_modules/postcss-loader/src/index.js","mtime":1678346315020},{"path":"/Users/gongmiaolei/Downloads/jiawawiki/web/node_modules/cache-loader/dist/cjs.js","mtime":1678346314360},{"path":"/Users/gongmiaolei/Downloads/jiawawiki/web/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":1678346314907}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgaW1nIHsKICAgIHdpZHRoOiA1MHB4OwogICAgaGVpZ2h0OiA1MHB4OwogIH0K"},{"version":3,"sources":["/Users/gongmiaolei/Downloads/jiawawiki/web/src/views/admin/admin-user.vue"],"names":[],"mappings":";EAwSE,CAAC,CAAC,EAAE;IACF,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACd","file":"/Users/gongmiaolei/Downloads/jiawawiki/web/src/views/admin/admin-user.vue","sourceRoot":"","sourcesContent":["<template>\n  <a-layout>\n    <a-layout-content\n      :style=\"{ background: '#fff', padding: '24px', margin: 0, minHeight: '280px' }\"\n    >\n      <p>\n        <a-form layout=\"inline\" :model=\"param\">\n          <a-form-item>\n            <a-input v-model:value=\"param.loginName\" placeholder=\"登陆名\">\n            </a-input>\n          </a-form-item>\n          <a-form-item>\n            <a-button type=\"primary\" @click=\"handleQuery({page: 1, size: pagination.pageSize})\">\n              查询\n            </a-button>\n          </a-form-item>\n          <a-form-item>\n            <a-button type=\"primary\" @click=\"add()\">\n              新增\n            </a-button>\n          </a-form-item>\n        </a-form>\n      </p>\n      <a-table\n        :columns=\"columns\"\n        :row-key=\"record => record.id\"\n        :data-source=\"users\"\n        :pagination=\"pagination\"\n        :loading=\"loading\"\n        @change=\"handleTableChange\"\n      >\n        <template v-slot:action=\"{ text, record }\">\n          <a-space size=\"small\">\n            <a-button type=\"primary\" @click=\"resetPassword(record)\">\n              重置密码\n            </a-button>\n            <a-button type=\"primary\" @click=\"edit(record)\">\n              编辑\n            </a-button>\n            <a-popconfirm\n              title=\"删除后不可恢复，确认删除?\"\n              ok-text=\"是\"\n              cancel-text=\"否\"\n              @confirm=\"handleDelete(record.id)\"\n            >\n              <a-button type=\"danger\">\n                删除\n              </a-button>\n            </a-popconfirm>\n          </a-space>\n        </template>\n      </a-table>\n    </a-layout-content>\n  </a-layout>\n\n  <a-modal\n    title=\"用户表单\"\n    v-model:visible=\"modalVisible\"\n    :confirm-loading=\"modalLoading\"\n    @ok=\"handleModalOk\"\n  >\n    <a-form :model=\"user\" :label-col=\"{ span: 6 }\" :wrapper-col=\"{ span: 18 }\">\n      <a-form-item label=\"登陆名\">\n        <a-input v-model:value=\"user.loginName\" :disabled=\"!!user.id\"/>\n      </a-form-item>\n      <a-form-item label=\"昵称\">\n        <a-input v-model:value=\"user.name\" />\n      </a-form-item>\n      <a-form-item label=\"密码\" v-show=\"!user.id\">\n        <a-input v-model:value=\"user.password\"/>\n      </a-form-item>\n    </a-form>\n  </a-modal>\n\n  <a-modal\n    title=\"重置密码\"\n    v-model:visible=\"resetModalVisible\"\n    :confirm-loading=\"resetModalLoading\"\n    @ok=\"handleResetModalOk\"\n  >\n    <a-form :model=\"user\" :label-col=\"{ span: 6 }\" :wrapper-col=\"{ span: 18 }\">\n      <a-form-item label=\"新密码\">\n        <a-input v-model:value=\"user.password\"/>\n      </a-form-item>\n    </a-form>\n  </a-modal>\n</template>\n\n<script lang=\"ts\">\n  import { defineComponent, onMounted, ref } from 'vue';\n  import axios from 'axios';\n  import { message } from 'ant-design-vue';\n  import {Tool} from \"@/util/tool\";\n\n  declare let hexMd5: any;\n  declare let KEY: any;\n\n  export default defineComponent({\n    name: 'AdminUser',\n    setup() {\n      const param = ref();\n      param.value = {};\n      const users = ref();\n      const pagination = ref({\n        current: 1,\n        pageSize: 10,\n        total: 0\n      });\n      const loading = ref(false);\n\n      const columns = [\n        {\n          title: '登陆名',\n          dataIndex: 'loginName'\n        },\n        {\n          title: '名称',\n          dataIndex: 'name'\n        },\n        {\n          title: '密码',\n          dataIndex: 'password'\n        },\n        {\n          title: 'Action',\n          key: 'action',\n          slots: { customRender: 'action' }\n        }\n      ];\n\n      /**\n       * 数据查询\n       **/\n      const handleQuery = (params: any) => {\n        loading.value = true;\n        // 如果不清空现有数据，则编辑保存重新加载数据后，再点编辑，则列表显示的还是编辑前的数据\n        users.value = [];\n        axios.get(\"/user/list\", {\n          params: {\n            page: params.page,\n            size: params.size,\n            loginName: param.value.loginName\n          }\n        }).then((response) => {\n          loading.value = false;\n          const data = response.data;\n          if (data.success) {\n            users.value = data.content.list;\n\n            // 重置分页按钮\n            pagination.value.current = params.page;\n            pagination.value.total = data.content.total;\n          } else {\n            message.error(data.message);\n          }\n        });\n      };\n\n      /**\n       * 表格点击页码时触发\n       */\n      const handleTableChange = (pagination: any) => {\n        console.log(\"看看自带的分页参数都有啥：\" + pagination);\n        handleQuery({\n          page: pagination.current,\n          size: pagination.pageSize\n        });\n      };\n\n      // -------- 表单 ---------\n      const user = ref();\n      const modalVisible = ref(false);\n      const modalLoading = ref(false);\n      const handleModalOk = () => {\n        modalLoading.value = true;\n\n        user.value.password = hexMd5(user.value.password + KEY);\n\n        axios.post(\"/user/save\", user.value).then((response) => {\n          modalLoading.value = false;\n          const data = response.data; // data = commonResp\n          if (data.success) {\n            modalVisible.value = false;\n\n            // 重新加载列表\n            handleQuery({\n              page: pagination.value.current,\n              size: pagination.value.pageSize,\n            });\n          } else {\n            message.error(data.message);\n          }\n        });\n      };\n\n      /**\n       * 编辑\n       */\n      const edit = (record: any) => {\n        modalVisible.value = true;\n        user.value = Tool.copy(record);\n      };\n\n      /**\n       * 新增\n       */\n      const add = () => {\n        modalVisible.value = true;\n        user.value = {};\n      };\n\n      const handleDelete = (id: number) => {\n        axios.delete(\"/user/delete/\" + id).then((response) => {\n          const data = response.data; // data = commonResp\n          if (data.success) {\n            // 重新加载列表\n            handleQuery({\n              page: pagination.value.current,\n              size: pagination.value.pageSize,\n            });\n          } else {\n            message.error(data.message);\n          }\n        });\n      };\n\n      // -------- 重置密码 ---------\n      const resetModalVisible = ref(false);\n      const resetModalLoading = ref(false);\n      const handleResetModalOk = () => {\n        resetModalLoading.value = true;\n\n        user.value.password = hexMd5(user.value.password + KEY);\n\n        axios.post(\"/user/reset-password\", user.value).then((response) => {\n          resetModalLoading.value = false;\n          const data = response.data; // data = commonResp\n          if (data.success) {\n            resetModalVisible.value = false;\n\n            // 重新加载列表\n            handleQuery({\n              page: pagination.value.current,\n              size: pagination.value.pageSize,\n            });\n          } else {\n            message.error(data.message);\n          }\n        });\n      };\n\n      /**\n       * 重置密码\n       */\n      const resetPassword = (record: any) => {\n        resetModalVisible.value = true;\n        user.value = Tool.copy(record);\n        user.value.password = null;\n      };\n\n      onMounted(() => {\n        handleQuery({\n          page: 1,\n          size: pagination.value.pageSize,\n        });\n      });\n\n      return {\n        param,\n        users,\n        pagination,\n        columns,\n        loading,\n        handleTableChange,\n        handleQuery,\n\n        edit,\n        add,\n\n        user,\n        modalVisible,\n        modalLoading,\n        handleModalOk,\n\n        handleDelete,\n\n        resetModalVisible,\n        resetModalLoading,\n        handleResetModalOk,\n        resetPassword\n      }\n    }\n  });\n</script>\n\n<style scoped>\n  img {\n    width: 50px;\n    height: 50px;\n  }\n</style>\n"]}]}