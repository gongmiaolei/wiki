{"remainingRequest":"/Users/gongmiaolei/Downloads/jiawawiki/web/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/gongmiaolei/Downloads/jiawawiki/web/src/views/admin/admin-ebook.vue?vue&type=style&index=0&id=25d7f366&scoped=true&lang=css","dependencies":[{"path":"/Users/gongmiaolei/Downloads/jiawawiki/web/src/views/admin/admin-ebook.vue","mtime":1614134929000},{"path":"/Users/gongmiaolei/Downloads/jiawawiki/web/node_modules/css-loader/dist/cjs.js","mtime":1678346314778},{"path":"/Users/gongmiaolei/Downloads/jiawawiki/web/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1678346315341},{"path":"/Users/gongmiaolei/Downloads/jiawawiki/web/node_modules/postcss-loader/src/index.js","mtime":1678346315020},{"path":"/Users/gongmiaolei/Downloads/jiawawiki/web/node_modules/cache-loader/dist/cjs.js","mtime":1678346314360},{"path":"/Users/gongmiaolei/Downloads/jiawawiki/web/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":1678346314907}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgaW1nIHsKICAgIHdpZHRoOiA1MHB4OwogICAgaGVpZ2h0OiA1MHB4OwogIH0K"},{"version":3,"sources":["/Users/gongmiaolei/Downloads/jiawawiki/web/src/views/admin/admin-ebook.vue"],"names":[],"mappings":";EA0TE,CAAC,CAAC,EAAE;IACF,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACd","file":"/Users/gongmiaolei/Downloads/jiawawiki/web/src/views/admin/admin-ebook.vue","sourceRoot":"","sourcesContent":["<template>\n  <a-layout>\n    <a-layout-content\n      :style=\"{ background: '#fff', padding: '24px', margin: 0, minHeight: '280px' }\"\n    >\n      <p>\n        <a-form layout=\"inline\" :model=\"param\">\n          <a-form-item>\n            <a-input v-model:value=\"param.name\" placeholder=\"名称\">\n            </a-input>\n          </a-form-item>\n          <a-form-item>\n            <a-button type=\"primary\" @click=\"handleQuery({page: 1, size: pagination.pageSize})\">\n              查询\n            </a-button>\n          </a-form-item>\n          <a-form-item>\n            <a-button type=\"primary\" @click=\"add()\">\n              新增\n            </a-button>\n          </a-form-item>\n        </a-form>\n      </p>\n      <a-table\n        :columns=\"columns\"\n        :row-key=\"record => record.id\"\n        :data-source=\"ebooks\"\n        :pagination=\"pagination\"\n        :loading=\"loading\"\n        @change=\"handleTableChange\"\n      >\n        <template #cover=\"{ text: cover }\">\n          <img v-if=\"cover\" :src=\"cover\" alt=\"avatar\" />\n        </template>\n        <template v-slot:category=\"{ text, record }\">\n          <span>{{ getCategoryName(record.category1Id) }} / {{ getCategoryName(record.category2Id) }}</span>\n        </template>\n        <template v-slot:action=\"{ text, record }\">\n          <a-space size=\"small\">\n            <router-link :to=\"'/admin/doc?ebookId=' + record.id\">\n              <a-button type=\"primary\">\n                文档管理\n              </a-button>\n            </router-link>\n            <a-button type=\"primary\" @click=\"edit(record)\">\n              编辑\n            </a-button>\n            <a-popconfirm\n              title=\"删除后不可恢复，确认删除?\"\n              ok-text=\"是\"\n              cancel-text=\"否\"\n              @confirm=\"handleDelete(record.id)\"\n            >\n              <a-button type=\"danger\">\n                删除\n              </a-button>\n            </a-popconfirm>\n          </a-space>\n        </template>\n      </a-table>\n    </a-layout-content>\n  </a-layout>\n\n  <a-modal\n    title=\"电子书表单\"\n    v-model:visible=\"modalVisible\"\n    :confirm-loading=\"modalLoading\"\n    @ok=\"handleModalOk\"\n  >\n    <a-form :model=\"ebook\" :label-col=\"{ span: 6 }\" :wrapper-col=\"{ span: 18 }\">\n      <a-form-item label=\"封面\">\n        <a-input v-model:value=\"ebook.cover\" />\n      </a-form-item>\n      <a-form-item label=\"名称\">\n        <a-input v-model:value=\"ebook.name\" />\n      </a-form-item>\n      <a-form-item label=\"分类\">\n        <a-cascader\n          v-model:value=\"categoryIds\"\n          :field-names=\"{ label: 'name', value: 'id', children: 'children' }\"\n          :options=\"level1\"\n        />\n      </a-form-item>\n      <a-form-item label=\"描述\">\n        <a-input v-model:value=\"ebook.description\" type=\"textarea\" />\n      </a-form-item>\n    </a-form>\n  </a-modal>\n</template>\n\n<script lang=\"ts\">\n  import { defineComponent, onMounted, ref } from 'vue';\n  import axios from 'axios';\n  import { message } from 'ant-design-vue';\n  import {Tool} from \"@/util/tool\";\n\n  export default defineComponent({\n    name: 'AdminEbook',\n    setup() {\n      const param = ref();\n      param.value = {};\n      const ebooks = ref();\n      const pagination = ref({\n        current: 1,\n        pageSize: 10,\n        total: 0\n      });\n      const loading = ref(false);\n\n      const columns = [\n        {\n          title: '封面',\n          dataIndex: 'cover',\n          slots: { customRender: 'cover' }\n        },\n        {\n          title: '名称',\n          dataIndex: 'name'\n        },\n        {\n          title: '分类',\n          slots: { customRender: 'category' }\n        },\n        {\n          title: '文档数',\n          dataIndex: 'docCount'\n        },\n        {\n          title: '阅读数',\n          dataIndex: 'viewCount'\n        },\n        {\n          title: '点赞数',\n          dataIndex: 'voteCount'\n        },\n        {\n          title: 'Action',\n          key: 'action',\n          slots: { customRender: 'action' }\n        }\n      ];\n\n      /**\n       * 数据查询\n       **/\n      const handleQuery = (params: any) => {\n        loading.value = true;\n        // 如果不清空现有数据，则编辑保存重新加载数据后，再点编辑，则列表显示的还是编辑前的数据\n        ebooks.value = [];\n        axios.get(\"/ebook/list\", {\n          params: {\n            page: params.page,\n            size: params.size,\n            name: param.value.name\n          }\n        }).then((response) => {\n          loading.value = false;\n          const data = response.data;\n          if (data.success) {\n            ebooks.value = data.content.list;\n\n            // 重置分页按钮\n            pagination.value.current = params.page;\n            pagination.value.total = data.content.total;\n          } else {\n            message.error(data.message);\n          }\n        });\n      };\n\n      /**\n       * 表格点击页码时触发\n       */\n      const handleTableChange = (pagination: any) => {\n        console.log(\"看看自带的分页参数都有啥：\" + pagination);\n        handleQuery({\n          page: pagination.current,\n          size: pagination.pageSize\n        });\n      };\n\n      // -------- 表单 ---------\n      /**\n       * 数组，[100, 101]对应：前端开发 / Vue\n       */\n      const categoryIds = ref();\n      const ebook = ref();\n      const modalVisible = ref(false);\n      const modalLoading = ref(false);\n      const handleModalOk = () => {\n        modalLoading.value = true;\n        ebook.value.category1Id = categoryIds.value[0];\n        ebook.value.category2Id = categoryIds.value[1];\n        axios.post(\"/ebook/save\", ebook.value).then((response) => {\n          modalLoading.value = false;\n          const data = response.data; // data = commonResp\n          if (data.success) {\n            modalVisible.value = false;\n\n            // 重新加载列表\n            handleQuery({\n              page: pagination.value.current,\n              size: pagination.value.pageSize,\n            });\n          } else {\n            message.error(data.message);\n          }\n        });\n      };\n\n      /**\n       * 编辑\n       */\n      const edit = (record: any) => {\n        modalVisible.value = true;\n        ebook.value = Tool.copy(record);\n        categoryIds.value = [ebook.value.category1Id, ebook.value.category2Id]\n      };\n\n      /**\n       * 新增\n       */\n      const add = () => {\n        modalVisible.value = true;\n        ebook.value = {};\n      };\n\n      const handleDelete = (id: number) => {\n        axios.delete(\"/ebook/delete/\" + id).then((response) => {\n          const data = response.data; // data = commonResp\n          if (data.success) {\n            // 重新加载列表\n            handleQuery({\n              page: pagination.value.current,\n              size: pagination.value.pageSize,\n            });\n          } else {\n            message.error(data.message);\n          }\n        });\n      };\n\n      const level1 =  ref();\n      let categorys: any;\n      /**\n       * 查询所有分类\n       **/\n      const handleQueryCategory = () => {\n        loading.value = true;\n        axios.get(\"/category/all\").then((response) => {\n          loading.value = false;\n          const data = response.data;\n          if (data.success) {\n            categorys = data.content;\n            console.log(\"原始数组：\", categorys);\n\n            level1.value = [];\n            level1.value = Tool.array2Tree(categorys, 0);\n            console.log(\"树形结构：\", level1.value);\n\n            // 加载完分类后，再加载电子书，否则如果分类树加载很慢，则电子书渲染会报错\n            handleQuery({\n              page: 1,\n              size: pagination.value.pageSize,\n            });\n          } else {\n            message.error(data.message);\n          }\n        });\n      };\n\n      const getCategoryName = (cid: number) => {\n        // console.log(cid)\n        let result = \"\";\n        categorys.forEach((item: any) => {\n          if (item.id === cid) {\n            // return item.name; // 注意，这里直接return不起作用\n            result = item.name;\n          }\n        });\n        return result;\n      };\n\n      onMounted(() => {\n        handleQueryCategory();\n      });\n\n      return {\n        param,\n        ebooks,\n        pagination,\n        columns,\n        loading,\n        handleTableChange,\n        handleQuery,\n        getCategoryName,\n\n        edit,\n        add,\n\n        ebook,\n        modalVisible,\n        modalLoading,\n        handleModalOk,\n        categoryIds,\n        level1,\n\n        handleDelete\n      }\n    }\n  });\n</script>\n\n<style scoped>\n  img {\n    width: 50px;\n    height: 50px;\n  }\n</style>\n"]}]}